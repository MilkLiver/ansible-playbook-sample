apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: jenkins-persistent-community
  template: jenkins-persistent-template
message: A Jenkins service has been created in your project.  Log into Jenkins with
  your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
  contains more information about using this template.
metadata:
  annotations:
    description: |-
      Jenkins service, with persistent storage and default use community jenkins image.

      NOTE: You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-jenkins
    openshift.io/display-name: Jenkins-Community
    openshift.io/documentation-url: https://docs.okd.io/latest/using_images/other_images/jenkins.html
    openshift.io/long-description: This template deploys a Jenkins server capable
      of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
    samples.operator.openshift.io/version: 4.10.3
    tags: instant-app,jenkins
  creationTimestamp: "2022-07-25T08:30:25Z"
  labels:
    samples.operator.openshift.io/managed: "true"
  name: jenkins-persistent-community
  namespace: openshift
  resourceVersion: "26686"
  uid: c1c4e189-fb13-4d8a-9237-784d47091f89
objects:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${JENKINS_SERVICE_NAME}
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      config.openshift.io/inject-trusted-cabundle: "true"
    name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${JENKINS_SERVICE_NAME}
  spec:
    storageClassName: ${JENKINS_PV_NAME}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${JENKINS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${JENKINS_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${JENKINS_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: ${ENABLE_OAUTH}
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: DISABLE_ADMINISTRATIVE_MONITORS
            value: ${DISABLE_ADMINISTRATIVE_MONITORS}
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: ${JENKINS_SERVICE_NAME}
          - name: JNLP_SERVICE_NAME
            value: ${JNLP_SERVICE_NAME}
          - name: ENABLE_FATAL_ERROR_LOG_FILE
            value: ${ENABLE_FATAL_ERROR_LOG_FILE}
          - name: JENKINS_UC_INSECURE
            value: ${JENKINS_UC_INSECURE}
          - name: CASC_JENKINS_CONFIG
            value: /var/lib/jenkins/proxy.yaml
          - name: INSTALL_PLUGINS
            value: ${INSTALL_PLUGINS}
          - name: OVERRIDE_PV_CONFIG_WITH_IMAGE_CONFIG
            value: ${OVERRIDE_PV_CONFIG_WITH_IMAGE_CONFIG}
          - name: OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS
            value: ${OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS}
          - name: OVERRIDE_RELEASE_MIGRATION_OVERWRITE
            value: ${OVERRIDE_RELEASE_MIGRATION_OVERWRITE}
          image: ${JENKINS_IMAGE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            periodSeconds: 360
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 240
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: ${JENKINS_SERVICE_NAME}-data
          - mountPath: /etc/pki/ca-trust/source/anchors
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
          - mountPath: /opt/openshift/configuration/config.xml.tpl
            subPath: config.xml.tpl
            name: config-xml-tpl
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: ${JENKINS_SERVICE_NAME}
        volumes:
        - name: ${JENKINS_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${JENKINS_SERVICE_NAME}
        - configMap:
            name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
            optional: true
          name: ${JENKINS_SERVICE_NAME}-trusted-ca-bundle
        - configMap:
            defaultMode: 0664
            name: config-xml-tpl
            optional: true
          name: config-xml-tpl
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
    name: ${JENKINS_SERVICE_NAME}
- apiVersion: authorization.openshift.io/v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${JENKINS_SERVICE_NAME}_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${JNLP_SERVICE_NAME}
  spec:
    ports:
    - name: agent
      nodePort: 0
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
        "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    name: ${JENKINS_SERVICE_NAME}
  spec:
    ports:
    - name: web
      nodePort: 0
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins
- description: The name of the service used for master/slave communication.
  displayName: Jenkins JNLP Service Name
  name: JNLP_SERVICE_NAME
  value: jenkins-jnlp
- description: Whether to enable OAuth OpenShift integration. If false, the static
    account 'admin' will be initialized with the password 'password'.
  displayName: Enable OAuth in Jenkins
  name: ENABLE_OAUTH
  value: "true"
- description: Set additional jenkins plugins.
  displayName: Jenkins Plugins
  name: INSTALL_PLUGINS
  value: 
- description: When running this image with an OpenShift persistent volume for the Jenkins config directory, the transfer of configuration from the image to the persistent volume is only done the first startup of the image as the persistent volume is assigned by the persistent volume claim creation. If you create a custom image that extends this image and updates configuration in the custom image after the initial startup, by default it will not be copied over, unless you set this environment variable to some non-empty value other than 'false'.
  displayName: Set override image config true or false.
  name: OVERRIDE_PV_CONFIG_WITH_IMAGE_CONFIG
  value: "false"
- description: When running this image with an OpenShift persistent volume for the Jenkins config directory, the transfer of plugins from the image to the persistent volume is only done the first startup of the image as the persistent volume is assigned by the persistent volume claim creation. If you create a custom image that extends this image and updates plugins in the custom image after the initial startup, by default they will not be copied over, unless you set this environment variable to some non-empty value other than 'false'.
  displayName: Set override image plugins true or false.
  name: OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS
  value: "false"
- description: When running this image with an OpenShift persistent volume for the Jenkins config directory, and this image is starting in an existing deployment created with an earlier version of this image, unless the environment variable is set to some non-empty value other than 'false', the plugins from the image will replace any versions of those plugins currently residing in the Jenkins plugin directory.
  displayName: Set release migration overwrite true or false.
  name: OVERRIDE_RELEASE_MIGRATION_OVERWRITE
  value: "false"
- description: Set the specified PV name or not set.
  displayName: Persistent Volumn Name
  name: JENKINS_PV_NAME
  value: 
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: 1Gi
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Whether to perform memory intensive, possibly slow, synchronization
    with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
    and site warnings monitor are disabled.
  displayName: Disable memory intensive administrative monitors
  name: DISABLE_ADMINISTRATIVE_MONITORS
  value: "false"
- description: When a fatal error occurs, an error log is created with information
    and the state obtained at the time of the fatal error.
  displayName: Fatal Error Log File
  name: ENABLE_FATAL_ERROR_LOG_FILE
  value: "false"
- description: Whether to allow use of a Jenkins Update Center that uses invalid certificate
    (self-signed, unknown CA). If any value other than 'false', certificate check
    is bypassed. By default, certificate check is enforced.
  displayName: Allows use of Jenkins Update Center repository with invalid SSL certificate
  name: JENKINS_UC_INSECURE
  value: "false"
- description: URL used for the Jenkins image.
  displayName: Jenkins Image
  name: JENKINS_IMAGE
  value: quay.io/openshift/origin-jenkins:latest
- description: Setting this value overrides the image used for the 'jnlp' container
    in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
    the image from the 'jenkins-agent-base:latest' ImageStreamTag in the 'openshift'
    namespace is used.
  displayName: Image used for the 'jnlp' container of the sample 'java-sidecar' and
    'nodejs-sidecar' PodTemplates
  name: AGENT_BASE_IMAGE
  value: quay.io/openshift/origin-jenkins-agent-base:latest
- description: Setting this value overrides the image used for the 'java-builder'
    container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
    the image from the 'java:latest' ImageStreamTag in the 'openshift' namespace is
    used.
  displayName: Image used for the 'java' container of the sample 'java-builder' PodTemplate
  name: JAVA_BUILDER_IMAGE
  value: quay.io/openshift/origin-jenkins-agent-maven:latest
- description: Setting this value overrides the image used for the 'nodejs-builder'
    container in the sample kubernetes plug-in PodTemplates provided with this image.  Otherwise,
    the image from the 'nodejs:latest' ImageStreamTag in the 'openshift' namespace
    is used.
  displayName: Image used for the 'nodejs' container of the sample 'nodejs-builder'
    PodTemplate
  name: NODEJS_BUILDER_IMAGE
  value: quay.io/openshift/origin-jenkins-agent-nodejs:latest
