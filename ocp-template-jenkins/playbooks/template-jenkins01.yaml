---
- name : OCP test
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../secret-files/ocp-oauth-secret.txt

  vars:
    openshift_ip: api.ocp.xxx.com
    template_namespace_target: "jenkins-template-test01"

  collections:
    - kubernetes.core

  tasks:
    - name: Login to OCP cluster and get api_key
      k8s_auth:
        host: "https://{{ openshift_ip }}:6443"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
      register: k8s_auth_results

    - name: Ensure the target Namespace exists.
      k8s:
        state: present
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        host: "https://{{ openshift_ip }}:6443"
        validate_certs: no
        api_version: v1
        kind: Namespace
        name: "{{ template_namespace_target }}"

    - name: Process a template in the cluster
      community.okd.openshift_process:
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        host: "https://{{ openshift_ip }}:6443"
        validate_certs: no
        name: jenkins-persistent-community
        namespace: openshift # only needed if using a template already on the server
        namespace_target: "{{ template_namespace_target }}"
        wait: yes
        parameter_file: ../parameter-files/jenkins-parameters.env
        state: rendered
      register: process_result

    - name: Create the rendered resources using apply
      community.okd.k8s:
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        host: "https://{{ openshift_ip }}:6443"
        validate_certs: no
        namespace: "{{ template_namespace_target }}"
        definition: '{{ item }}'
        wait: yes
        apply: yes
      loop: '{{ process_result.resources }}'

    - name: Get a list of all pods from used template deploy namespace
      k8s_info:
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        host: "https://{{ openshift_ip }}:6443"
        kind: Pod
        namespace: "{{ template_namespace_target }}"
        validate_certs: no
      register: pod_list